////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Support\DbResult.cs
//
// summary:	Implements the database result class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;

namespace LawsonOperationResult.DBSupport
{
	/// <summary>	Encapsulates the result of a database. </summary>
	public class DbResult
	{
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets a value indicating whether the success. </summary>
		///
		/// <value>	true if success, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public bool Success { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the message. </summary>
		///
		/// <value>	The message. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public string Message { get; set; }

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets or sets the thrown exception. </summary>
		///
		/// <value>	The thrown exception. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public Exception ThrownException { get; set; }
		/// <summary>	. </summary>
		public bool HasException => ThrownException != null;


		/// <summary>	Default constructor. </summary>
		public DbResult()
		{
			Success = true;
			Message = "Succeeded";
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Constructor. </summary>
		///
		/// <param name="affectedRows">	The affected rows. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public DbResult(int affectedRows)
		{
			Success = affectedRows > 0;
			Message = Success ? "Succeeded" : "Failed";
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Constructor. </summary>
		///
		/// <param name="success">	true if the operation was a success, false if it failed. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public DbResult(bool success)
		{
			Success = success;
			Message = Success ? "Succeeded" : "Failed";
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Constructor. </summary>
		///
		/// <param name="ex">	The ex. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public DbResult(Exception ex)
		{
			Success = false;
			Message = ex.Message;
			ThrownException = ex;
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Constructor. </summary>
		///
		/// <param name="success">	true if the operation was a success, false if it failed. </param>
		/// <param name="message">	The message. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public DbResult(bool success, string message)
		{
			Success = success;
			Message = message;
		}
	}
}
